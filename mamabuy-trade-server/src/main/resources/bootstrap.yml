
#server:
#  port: 8801
#spring:
#  application:
#    name: user-service
#  profiles: dev
#  cloud:
#    config:
#      profile: dev
#      discovery:
#        service-id: config-server
#        enabled: true
#eureka:
#  client:
#    service-url: http://106.12.26.193:8888/eureka
#logging:
#  config: classpath:logback.xml
#sharding:
#  jdbc:
#    datasource:
#      names: ds
#      ds:
#        name: user
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        filters: stat
#        maxActive: 20
#        initialSize: 1
#        maxWait: 60000
#        minIdle: 1
#        timeBetweenEvictionRunsMillis: 60000
#        minEvictableIdleTimeMillis: 300000
#        validationQuery: select 'x'
#        testWhileIdle: true
#        testOnBorrow: false
#        testOnReturn: false
#        poolPreparedStatements: true
#        maxOpenPreparedStatements: 20
#    config:
#      sharding:
#        tables:
#          t_user:
#            actual-data-nodes: ds.t_user_${0..2}
#            key-generator-column-name: uuid
#            table-strategy:
#              inline:
#                sharding-column: uuid
#                algorithm-expression: t_user_${uuid % 3}

server:
  port: 8802
spring:
  application:
    name: trade-service
  profiles:
      active: dev
  cloud:
      config:
        profile: dev
        discovery:
          enabled: true
          service-id: config-server

sharding:
  jdbc:
    datasource:
      names: ds
      ds:
        name: user
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    config:
      sharding:
        tables:
          t_user:
            actual-data-nodes: ds.t_user_${0..2}
            key-generator-column-name: uuid
            table-strategy:
              inline:
                sharding-column: uuid
                algorithm-expression: t_user_${uuid % 3}



eureka:
  client:
    service-url:
      defaultZone: http://114.115.203.161:8889/eureka
#  instance:
#    ip-address: 116.196.72.91
#    prefer-ip-address: true

#log
logging:
    config: classpath:logback.xml